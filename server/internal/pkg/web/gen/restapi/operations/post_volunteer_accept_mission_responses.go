// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"augeu/server/internal/pkg/web/gen/models"
)

// PostVolunteerAcceptMissionOKCode is the HTTP code returned for type PostVolunteerAcceptMissionOK
const PostVolunteerAcceptMissionOKCode int = 200

/*
PostVolunteerAcceptMissionOK 接受任务成功

swagger:response postVolunteerAcceptMissionOK
*/
type PostVolunteerAcceptMissionOK struct {

	/*
	  In: Body
	*/
	Payload *models.VolunteerAcceptMissionResponse `json:"body,omitempty"`
}

// NewPostVolunteerAcceptMissionOK creates PostVolunteerAcceptMissionOK with default headers values
func NewPostVolunteerAcceptMissionOK() *PostVolunteerAcceptMissionOK {

	return &PostVolunteerAcceptMissionOK{}
}

// WithPayload adds the payload to the post volunteer accept mission o k response
func (o *PostVolunteerAcceptMissionOK) WithPayload(payload *models.VolunteerAcceptMissionResponse) *PostVolunteerAcceptMissionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post volunteer accept mission o k response
func (o *PostVolunteerAcceptMissionOK) SetPayload(payload *models.VolunteerAcceptMissionResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostVolunteerAcceptMissionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostVolunteerAcceptMissionForbiddenCode is the HTTP code returned for type PostVolunteerAcceptMissionForbidden
const PostVolunteerAcceptMissionForbiddenCode int = 403

/*
PostVolunteerAcceptMissionForbidden 未登录

swagger:response postVolunteerAcceptMissionForbidden
*/
type PostVolunteerAcceptMissionForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.UnauthorizedError `json:"body,omitempty"`
}

// NewPostVolunteerAcceptMissionForbidden creates PostVolunteerAcceptMissionForbidden with default headers values
func NewPostVolunteerAcceptMissionForbidden() *PostVolunteerAcceptMissionForbidden {

	return &PostVolunteerAcceptMissionForbidden{}
}

// WithPayload adds the payload to the post volunteer accept mission forbidden response
func (o *PostVolunteerAcceptMissionForbidden) WithPayload(payload *models.UnauthorizedError) *PostVolunteerAcceptMissionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post volunteer accept mission forbidden response
func (o *PostVolunteerAcceptMissionForbidden) SetPayload(payload *models.UnauthorizedError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostVolunteerAcceptMissionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostVolunteerAcceptMissionNotFoundCode is the HTTP code returned for type PostVolunteerAcceptMissionNotFound
const PostVolunteerAcceptMissionNotFoundCode int = 404

/*
PostVolunteerAcceptMissionNotFound 用户不存在

swagger:response postVolunteerAcceptMissionNotFound
*/
type PostVolunteerAcceptMissionNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ActionFailure `json:"body,omitempty"`
}

// NewPostVolunteerAcceptMissionNotFound creates PostVolunteerAcceptMissionNotFound with default headers values
func NewPostVolunteerAcceptMissionNotFound() *PostVolunteerAcceptMissionNotFound {

	return &PostVolunteerAcceptMissionNotFound{}
}

// WithPayload adds the payload to the post volunteer accept mission not found response
func (o *PostVolunteerAcceptMissionNotFound) WithPayload(payload *models.ActionFailure) *PostVolunteerAcceptMissionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post volunteer accept mission not found response
func (o *PostVolunteerAcceptMissionNotFound) SetPayload(payload *models.ActionFailure) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostVolunteerAcceptMissionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
