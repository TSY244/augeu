// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Strings strings
//
// swagger:model Strings
type Strings struct {

	// pcap
	// Required: true
	Pcap []string `json:"pcap"`

	// sha256
	// Required: true
	Sha256 []string `json:"sha256"`
}

// Validate validates this strings
func (m *Strings) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePcap(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSha256(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Strings) validatePcap(formats strfmt.Registry) error {

	if err := validate.Required("pcap", "body", m.Pcap); err != nil {
		return err
	}

	for i := 0; i < len(m.Pcap); i++ {

	}

	return nil
}

func (m *Strings) validateSha256(formats strfmt.Registry) error {

	if err := validate.Required("sha256", "body", m.Sha256); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this strings based on context it is used
func (m *Strings) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Strings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Strings) UnmarshalBinary(b []byte) error {
	var res Strings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
