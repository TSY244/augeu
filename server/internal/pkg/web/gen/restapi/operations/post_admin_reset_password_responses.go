// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"augeu/server/internal/pkg/web/gen/models"
)

// PostAdminResetPasswordOKCode is the HTTP code returned for type PostAdminResetPasswordOK
const PostAdminResetPasswordOKCode int = 200

/*
PostAdminResetPasswordOK 重置密码

swagger:response postAdminResetPasswordOK
*/
type PostAdminResetPasswordOK struct {

	/*
	  In: Body
	*/
	Payload *models.AdminResetPasswordResponse `json:"body,omitempty"`
}

// NewPostAdminResetPasswordOK creates PostAdminResetPasswordOK with default headers values
func NewPostAdminResetPasswordOK() *PostAdminResetPasswordOK {

	return &PostAdminResetPasswordOK{}
}

// WithPayload adds the payload to the post admin reset password o k response
func (o *PostAdminResetPasswordOK) WithPayload(payload *models.AdminResetPasswordResponse) *PostAdminResetPasswordOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post admin reset password o k response
func (o *PostAdminResetPasswordOK) SetPayload(payload *models.AdminResetPasswordResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAdminResetPasswordOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAdminResetPasswordForbiddenCode is the HTTP code returned for type PostAdminResetPasswordForbidden
const PostAdminResetPasswordForbiddenCode int = 403

/*
PostAdminResetPasswordForbidden 未登录

swagger:response postAdminResetPasswordForbidden
*/
type PostAdminResetPasswordForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.UnauthorizedError `json:"body,omitempty"`
}

// NewPostAdminResetPasswordForbidden creates PostAdminResetPasswordForbidden with default headers values
func NewPostAdminResetPasswordForbidden() *PostAdminResetPasswordForbidden {

	return &PostAdminResetPasswordForbidden{}
}

// WithPayload adds the payload to the post admin reset password forbidden response
func (o *PostAdminResetPasswordForbidden) WithPayload(payload *models.UnauthorizedError) *PostAdminResetPasswordForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post admin reset password forbidden response
func (o *PostAdminResetPasswordForbidden) SetPayload(payload *models.UnauthorizedError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAdminResetPasswordForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAdminResetPasswordNotFoundCode is the HTTP code returned for type PostAdminResetPasswordNotFound
const PostAdminResetPasswordNotFoundCode int = 404

/*
PostAdminResetPasswordNotFound 用户不存在

swagger:response postAdminResetPasswordNotFound
*/
type PostAdminResetPasswordNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ActionFailure `json:"body,omitempty"`
}

// NewPostAdminResetPasswordNotFound creates PostAdminResetPasswordNotFound with default headers values
func NewPostAdminResetPasswordNotFound() *PostAdminResetPasswordNotFound {

	return &PostAdminResetPasswordNotFound{}
}

// WithPayload adds the payload to the post admin reset password not found response
func (o *PostAdminResetPasswordNotFound) WithPayload(payload *models.ActionFailure) *PostAdminResetPasswordNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post admin reset password not found response
func (o *PostAdminResetPasswordNotFound) SetPayload(payload *models.ActionFailure) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAdminResetPasswordNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
