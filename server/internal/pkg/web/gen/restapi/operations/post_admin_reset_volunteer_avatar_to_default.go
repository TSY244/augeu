// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostAdminResetVolunteerAvatarToDefaultHandlerFunc turns a function with the right signature into a post admin reset volunteer avatar to default handler
type PostAdminResetVolunteerAvatarToDefaultHandlerFunc func(PostAdminResetVolunteerAvatarToDefaultParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostAdminResetVolunteerAvatarToDefaultHandlerFunc) Handle(params PostAdminResetVolunteerAvatarToDefaultParams) middleware.Responder {
	return fn(params)
}

// PostAdminResetVolunteerAvatarToDefaultHandler interface for that can handle valid post admin reset volunteer avatar to default params
type PostAdminResetVolunteerAvatarToDefaultHandler interface {
	Handle(PostAdminResetVolunteerAvatarToDefaultParams) middleware.Responder
}

// NewPostAdminResetVolunteerAvatarToDefault creates a new http.Handler for the post admin reset volunteer avatar to default operation
func NewPostAdminResetVolunteerAvatarToDefault(ctx *middleware.Context, handler PostAdminResetVolunteerAvatarToDefaultHandler) *PostAdminResetVolunteerAvatarToDefault {
	return &PostAdminResetVolunteerAvatarToDefault{Context: ctx, Handler: handler}
}

/*
	PostAdminResetVolunteerAvatarToDefault swagger:route POST /admin/resetVolunteerAvatarToDefault postAdminResetVolunteerAvatarToDefault

PostAdminResetVolunteerAvatarToDefault post admin reset volunteer avatar to default API
*/
type PostAdminResetVolunteerAvatarToDefault struct {
	Context *middleware.Context
	Handler PostAdminResetVolunteerAvatarToDefaultHandler
}

func (o *PostAdminResetVolunteerAvatarToDefault) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPostAdminResetVolunteerAvatarToDefaultParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PostAdminResetVolunteerAvatarToDefaultBody post admin reset volunteer avatar to default body
//
// swagger:model PostAdminResetVolunteerAvatarToDefaultBody
type PostAdminResetVolunteerAvatarToDefaultBody struct {

	// 管理员id
	// Required: true
	AdminID *string `json:"adminId"`

	// 志愿者id
	// Required: true
	VolunteerID *string `json:"volunteerId"`
}

// Validate validates this post admin reset volunteer avatar to default body
func (o *PostAdminResetVolunteerAvatarToDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAdminID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVolunteerID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostAdminResetVolunteerAvatarToDefaultBody) validateAdminID(formats strfmt.Registry) error {

	if err := validate.Required("data"+"."+"adminId", "body", o.AdminID); err != nil {
		return err
	}

	return nil
}

func (o *PostAdminResetVolunteerAvatarToDefaultBody) validateVolunteerID(formats strfmt.Registry) error {

	if err := validate.Required("data"+"."+"volunteerId", "body", o.VolunteerID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post admin reset volunteer avatar to default body based on context it is used
func (o *PostAdminResetVolunteerAvatarToDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostAdminResetVolunteerAvatarToDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostAdminResetVolunteerAvatarToDefaultBody) UnmarshalBinary(b []byte) error {
	var res PostAdminResetVolunteerAvatarToDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
